{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startingBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reservePrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__BidTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__ReservePriceNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "End",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Start",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "end",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_endAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_ended",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_highestBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_highestBidder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_pendingReturns",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_reservePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_started",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9bbfd79ada00bb49aaa5230e960272286eb33fc2a8ca6857cd2c596679fd8035",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1041572",
    "logsBloom": "0x
    "blockHash": "0x65aba322e115a4bdc4a40ee93eece45e9e4c288246cbf76ca1c5e705e43c6487",
    "transactionHash": "0x9bbfd79ada00bb49aaa5230e960272286eb33fc2a8ca6857cd2c596679fd8035",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x9bbfd79ada00bb49aaa5230e960272286eb33fc2a8ca6857cd2c596679fd8035",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x65aba322e115a4bdc4a40ee93eece45e9e4c288246cbf76ca1c5e705e43c6487"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x9bbfd79ada00bb49aaa5230e960272286eb33fc2a8ca6857cd2c596679fd8035",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x65aba322e115a4bdc4a40ee93eece45e9e4c288246cbf76ca1c5e705e43c6487"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "1041572",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1,
    90,
    5
  ],
  "numDeployments": 1,
  "solcInputHash": "f121b45a882dd9cc292796f06f3e4aae",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startingBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__AlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__BidTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__ReservePriceNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"End\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Start\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_endAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_ended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_pendingReturns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_reservePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_started\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Soheil Zolfaghari\",\"details\":\"A simple auction contract that allows bidding and withdrawal of funds. The contract is Ownable, meaning that it has an owner who can start and end the auction.\",\"kind\":\"dev\",\"methods\":{\"bid()\":{\"details\":\"Allows a user to place a bid in the auction.\"},\"constructor\":{\"details\":\"Constructor function.\",\"params\":{\"_duration\":\"The duration of the auction in seconds.\",\"_reservePrice\":\"The minimum price required to meet the reserve.\",\"_startingBid\":\"The starting bid value for the auction.\"}},\"end()\":{\"details\":\"Ends the auction and transfers funds to the highest bidder.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Starts the auction.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Allows a bidder to withdraw their pending returns.\"}},\"title\":\"Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bid()\":{\"notice\":\"The auction must be started and not ended.The bid amount must be higher than the current highest bid.\"},\"end()\":{\"notice\":\"Only the owner can end the auction.The auction must be started, not ended, and the reserve price must be met.\"},\"start()\":{\"notice\":\"Only the owner can start the auction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.20;\\n// Imports\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// Error Codes\\nerror Auction__AlreadyStarted();\\nerror Auction__NotOwner();\\nerror Auction__NotStarted();\\nerror Auction__AlreadyEnded();\\nerror Auction__BidTooLow();\\nerror Auction__TransferFailed();\\nerror Auction__NotEnded();\\nerror Auction__ReservePriceNotMet();\\n\\n/**\\n * @title Auction\\n * @author Soheil Zolfaghari\\n * @dev A simple auction contract that allows bidding and withdrawal of funds.\\n * The contract is Ownable, meaning that it has an owner who can start and end the auction.\\n */\\ncontract Auction is Ownable {\\n    // State Variables\\n    uint public s_endAt; // Timestamp at which the auction ends\\n    uint public s_duration; // Duration of the auction in seconds\\n    bool public s_started; // Indicates whether the auction has started\\n    bool public s_ended; // Indicates whether the auction has ended\\n    uint public s_reservePrice; // Minimum price required to meet the reserve\\n    address public s_highestBidder; // Address of the highest bidder\\n    uint public s_highestBid; // Value of the highest bid\\n    mapping(address => uint) public s_pendingReturns; // Pending returns for each bidder\\n\\n    // Events\\n    event Start();\\n    event Bid(address indexed sender, uint amount);\\n    event Withdraw(address indexed bidder, uint amount);\\n    event End(address winner, uint amount);\\n\\n    // Functions\\n\\n    /**\\n     * @dev Constructor function.\\n     * @param _startingBid The starting bid value for the auction.\\n     * @param _duration The duration of the auction in seconds.\\n     * @param _reservePrice The minimum price required to meet the reserve.\\n     */\\n    constructor(uint _startingBid, uint _duration, uint _reservePrice) {\\n        s_highestBid = _startingBid;\\n        s_duration = _duration;\\n        s_reservePrice = _reservePrice;\\n        transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Starts the auction.\\n     * @notice Only the owner can start the auction.\\n     */\\n    function start() external onlyOwner {\\n        if (s_started) revert Auction__AlreadyStarted();\\n\\n        s_started = true;\\n        s_endAt = block.timestamp + s_duration;\\n\\n        emit Start();\\n    }\\n\\n    /**\\n     * @dev Allows a user to place a bid in the auction.\\n     * @notice The auction must be started and not ended.\\n     * @notice The bid amount must be higher than the current highest bid.\\n     */\\n    function bid() external payable {\\n        if (!s_started) revert Auction__NotStarted();\\n        if (block.timestamp >= s_endAt) revert Auction__AlreadyEnded();\\n        if (msg.value <= s_highestBid) revert Auction__BidTooLow();\\n\\n        // Add the current bid to pendingReturns of the previous s_highestBidder\\n        if (s_highestBidder != address(0)) {\\n            s_pendingReturns[s_highestBidder] += s_highestBid;\\n        }\\n\\n        s_highestBidder = msg.sender;\\n        s_highestBid = msg.value;\\n\\n        emit Bid(msg.sender, msg.value);\\n    }\\n\\n    /**\\n     * @dev Allows a bidder to withdraw their pending returns.\\n     */\\n    function withdraw() public {\\n        uint amount = s_pendingReturns[msg.sender];\\n        if (amount > 0) {\\n            // Check-Effects-Interactions pattern to prevent re-entrancy attacks\\n            s_pendingReturns[msg.sender] = 0;\\n            (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n            if (!success) {\\n                s_pendingReturns[msg.sender] = amount;\\n                revert Auction__TransferFailed();\\n            }\\n        }\\n        emit Withdraw(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Ends the auction and transfers funds to the highest bidder.\\n     * @notice Only the owner can end the auction.\\n     * @notice The auction must be started, not ended, and the reserve price must be met.\\n     */\\n    function end() external onlyOwner {\\n        if (!s_started) revert Auction__NotStarted();\\n        if (block.timestamp < s_endAt) revert Auction__NotEnded();\\n        if (s_ended) revert Auction__AlreadyEnded();\\n        if (s_highestBid < s_reservePrice) revert Auction__ReservePriceNotMet();\\n\\n        s_ended = true;\\n\\n        if (s_highestBidder != address(0)) {\\n            (bool success, ) = payable(owner()).call{value: s_highestBid}(\\\"\\\");\\n            if (!success) revert Auction__TransferFailed();\\n        }\\n\\n        emit End(s_highestBidder, s_highestBid);\\n    }\\n}\\n\",\"keccak256\":\"0xd2e055bc2551d57d1c3dfb2612534ff2ade7ddbe811f40ef4d5bf08cf4e9ad15\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001465380380620014658339818101604052810190620000379190620002e2565b620000576200004b6200008660201b60201c565b6200008e60201b60201c565b8260068190555081600281905550806004819055506200007d336200015260201b60201c565b50505062000459565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000162620001e860201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001cb90620003c5565b60405180910390fd5b620001e5816200008e60201b60201c565b50565b620001f86200008660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200021e6200027960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000277576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026e9062000437565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b6000819050919050565b620002bc81620002a7565b8114620002c857600080fd5b50565b600081519050620002dc81620002b1565b92915050565b600080600060608486031215620002fe57620002fd620002a2565b5b60006200030e86828701620002cb565b93505060206200032186828701620002cb565b92505060406200033486828701620002cb565b9150509250925092565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620003ad6026836200033e565b9150620003ba826200034f565b604082019050919050565b60006020820190508181036000830152620003e0816200039e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200041f6020836200033e565b91506200042c82620003e7565b602082019050919050565b60006020820190508181036000830152620004528162000410565b9050919050565b610ffc80620004696000396000f3fe6080604052600436106100e85760003560e01c8063a280a8f71161008a578063e81a89a511610059578063e81a89a51461027b578063efbe1c1c146102a6578063f2fde38b146102bd578063f71d01ce146102e6576100e8565b8063a280a8f7146101e3578063a886b1ee1461020e578063b379e65914610239578063be9a655514610264576100e8565b80635b8c8d97116100c65780635b8c8d971461014b578063715018a6146101765780638da5cb5b1461018d578063904bc37d146101b8576100e8565b80630e9e7e51146100ed5780631998aeef1461012a5780633ccfd60b14610134575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d24565b610311565b6040516101219190610d6a565b60405180910390f35b610132610329565b005b34801561014057600080fd5b5061014961054e565b005b34801561015757600080fd5b5061016061071a565b60405161016d9190610d94565b60405180910390f35b34801561018257600080fd5b5061018b610740565b005b34801561019957600080fd5b506101a2610754565b6040516101af9190610d94565b60405180910390f35b3480156101c457600080fd5b506101cd61077d565b6040516101da9190610dca565b60405180910390f35b3480156101ef57600080fd5b506101f8610790565b6040516102059190610dca565b60405180910390f35b34801561021a57600080fd5b506102236107a3565b6040516102309190610d6a565b60405180910390f35b34801561024557600080fd5b5061024e6107a9565b60405161025b9190610d6a565b60405180910390f35b34801561027057600080fd5b506102796107af565b005b34801561028757600080fd5b5061029061085b565b60405161029d9190610d6a565b60405180910390f35b3480156102b257600080fd5b506102bb610861565b005b3480156102c957600080fd5b506102e460048036038101906102df9190610d24565b610aee565b005b3480156102f257600080fd5b506102fb610b71565b6040516103089190610d6a565b60405180910390f35b60076020528060005260406000206000915090505481565b600360009054906101000a900460ff1661036f576040517f2f54591200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015442106103aa576040517ff46accef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60065434116103e5576040517f95b79dad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104b65760065460076000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ae9190610e14565b925050819055505b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346006819055503373ffffffffffffffffffffffffffffffffffffffff167fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2346040516105449190610d6a565b60405180910390a2565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156106c9576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161060690610e79565b60006040518083038185875af1925050503d8060008114610643576040519150601f19603f3d011682016040523d82523d6000602084013e610648565b606091505b50509050806106c75781600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506040517f034eb39300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161070f9190610d6a565b60405180910390a250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610748610b77565b6107526000610bf5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360019054906101000a900460ff1681565b600360009054906101000a900460ff1681565b60045481565b60015481565b6107b7610b77565b600360009054906101000a900460ff16156107fe576040517fbec4182900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360006101000a81548160ff021916908315150217905550600254426108279190610e14565b6001819055507f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b60405160405180910390a1565b60065481565b610869610b77565b600360009054906101000a900460ff166108af576040517f2f54591200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544210156108eb576040517fdec7af5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360019054906101000a900460ff1615610932576040517ff46accef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004546006541015610970576040517f7ff6b26e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a8f5760006109eb610754565b73ffffffffffffffffffffffffffffffffffffffff16600654604051610a1090610e79565b60006040518083038185875af1925050503d8060008114610a4d576040519150601f19603f3d011682016040523d82523d6000602084013e610a52565b606091505b5050905080610a8d576040517f034eb39300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b7f7d7570b046e5ead3a4f3fbc9fa2445113625a1e79823776146316bafed6b8cc5600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654604051610ae4929190610e8e565b60405180910390a1565b610af6610b77565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c90610f3a565b60405180910390fd5b610b6e81610bf5565b50565b60025481565b610b7f610cb9565b73ffffffffffffffffffffffffffffffffffffffff16610b9d610754565b73ffffffffffffffffffffffffffffffffffffffff1614610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea90610fa6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf182610cc6565b9050919050565b610d0181610ce6565b8114610d0c57600080fd5b50565b600081359050610d1e81610cf8565b92915050565b600060208284031215610d3a57610d39610cc1565b5b6000610d4884828501610d0f565b91505092915050565b6000819050919050565b610d6481610d51565b82525050565b6000602082019050610d7f6000830184610d5b565b92915050565b610d8e81610ce6565b82525050565b6000602082019050610da96000830184610d85565b92915050565b60008115159050919050565b610dc481610daf565b82525050565b6000602082019050610ddf6000830184610dbb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e1f82610d51565b9150610e2a83610d51565b9250828201905080821115610e4257610e41610de5565b5b92915050565b600081905092915050565b50565b6000610e63600083610e48565b9150610e6e82610e53565b600082019050919050565b6000610e8482610e56565b9150819050919050565b6000604082019050610ea36000830185610d85565b610eb06020830184610d5b565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f24602683610eb7565b9150610f2f82610ec8565b604082019050919050565b60006020820190508181036000830152610f5381610f17565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f90602083610eb7565b9150610f9b82610f5a565b602082019050919050565b60006020820190508181036000830152610fbf81610f83565b905091905056fea264697066735822122084447710ed5366f097f2fc04cee9a319e9689db39e539f5074d6773586678c8e64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Soheil Zolfaghari",
    "details": "A simple auction contract that allows bidding and withdrawal of funds. The contract is Ownable, meaning that it has an owner who can start and end the auction.",
    "kind": "dev",
    "methods": {
      "bid()": {
        "details": "Allows a user to place a bid in the auction."
      },
      "constructor": {
        "details": "Constructor function.",
        "params": {
          "_duration": "The duration of the auction in seconds.",
          "_reservePrice": "The minimum price required to meet the reserve.",
          "_startingBid": "The starting bid value for the auction."
        }
      },
      "end()": {
        "details": "Ends the auction and transfers funds to the highest bidder."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "start()": {
        "details": "Starts the auction."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw()": {
        "details": "Allows a bidder to withdraw their pending returns."
      }
    },
    "title": "Auction",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bid()": {
        "notice": "The auction must be started and not ended.The bid amount must be higher than the current highest bid."
      },
      "end()": {
        "notice": "Only the owner can end the auction.The auction must be started, not ended, and the reserve price must be met."
      },
      "start()": {
        "notice": "Only the owner can start the auction."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Auction.sol:Auction",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 158,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_endAt",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 160,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_duration",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 162,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_started",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 164,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_ended",
        "offset": 1,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 166,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_reservePrice",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 168,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_highestBidder",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 170,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_highestBid",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 174,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_pendingReturns",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}